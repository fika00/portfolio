{
  "version": 3,
  "sources": ["../../react/cjs/react-jsx-runtime.development.js", "../../react/jsx-runtime.js", "../../@react-three/postprocessing/dist/index.js", "../../screen-space-reflections/dist/index.js"],
  "sourcesContent": ["/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n", "import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport * as THREE from 'three';\nimport { HalfFloatType, Vector3, TextureLoader, sRGBEncoding, RepeatWrapping, Uniform } from 'three';\nimport React, { createContext, forwardRef, useMemo, useEffect, useRef, useLayoutEffect, useImperativeHandle, useContext, useState, useCallback } from 'react';\nimport { useThree, useFrame, useInstanceHandle, createPortal, extend, useLoader } from '@react-three/fiber';\nimport { EffectComposer as EffectComposer$1, RenderPass, NormalPass, DepthDownsamplingPass, EffectPass, DepthOfFieldEffect, MaskFunction, DepthPickingPass, CopyPass, BlendFunction, BloomEffect, BrightnessContrastEffect, ChromaticAberrationEffect, ColorAverageEffect, ColorDepthEffect, DepthEffect, DotScreenEffect, GlitchEffect, GlitchMode, GodRaysEffect, GridEffect, HueSaturationEffect, NoiseEffect, OutlineEffect, PixelationEffect, ScanlineEffect, SelectiveBloomEffect, SepiaEffect, SSAOEffect, SMAAEffect, TextureEffect, ToneMappingEffect, VignetteEffect, ShockWaveEffect, LUT3DEffect, TiltShiftEffect as TiltShiftEffect$1, Effect, EffectAttribute } from 'postprocessing';\nimport { easing } from 'maath';\nimport { isWebGL2Available } from 'three-stdlib';\nimport { SSREffect } from 'screen-space-reflections';\n\nconst EffectComposerContext = createContext(null);\nconst EffectComposer = React.memo(forwardRef(({ children, camera: _camera, scene: _scene, resolutionScale, enabled = true, renderPriority = 1, autoClear = true, depthBuffer, disableNormalPass, stencilBuffer, multisampling = 8, frameBufferType = HalfFloatType, }, ref) => {\n    const { gl, scene: defaultScene, camera: defaultCamera, size } = useThree();\n    const scene = _scene || defaultScene;\n    const camera = _camera || defaultCamera;\n    const [composer, normalPass, downSamplingPass] = useMemo(() => {\n        const webGL2Available = isWebGL2Available();\n        // Initialize composer\n        const effectComposer = new EffectComposer$1(gl, {\n            depthBuffer,\n            stencilBuffer,\n            multisampling: multisampling > 0 && webGL2Available ? multisampling : 0,\n            frameBufferType,\n        });\n        // Add render pass\n        effectComposer.addPass(new RenderPass(scene, camera));\n        // Create normal pass\n        let downSamplingPass = null;\n        let normalPass = null;\n        if (!disableNormalPass) {\n            normalPass = new NormalPass(scene, camera);\n            normalPass.enabled = false;\n            effectComposer.addPass(normalPass);\n            if (resolutionScale !== undefined && webGL2Available) {\n                downSamplingPass = new DepthDownsamplingPass({ normalBuffer: normalPass.texture, resolutionScale });\n                downSamplingPass.enabled = false;\n                effectComposer.addPass(downSamplingPass);\n            }\n        }\n        return [effectComposer, normalPass, downSamplingPass];\n    }, [\n        camera,\n        gl,\n        depthBuffer,\n        stencilBuffer,\n        multisampling,\n        frameBufferType,\n        scene,\n        disableNormalPass,\n        resolutionScale,\n    ]);\n    useEffect(() => composer === null || composer === void 0 ? void 0 : composer.setSize(size.width, size.height), [composer, size]);\n    useFrame((_, delta) => {\n        if (enabled) {\n            gl.autoClear = autoClear;\n            composer.render(delta);\n        }\n    }, enabled ? renderPriority : 0);\n    const group = useRef(null);\n    const instance = useInstanceHandle(group);\n    useLayoutEffect(() => {\n        let effectPass;\n        if (group.current && instance.current && composer) {\n            effectPass = new EffectPass(camera, ...instance.current.objects);\n            effectPass.renderToScreen = true;\n            composer.addPass(effectPass);\n            if (normalPass)\n                normalPass.enabled = true;\n            if (downSamplingPass)\n                downSamplingPass.enabled = true;\n        }\n        return () => {\n            if (effectPass)\n                composer === null || composer === void 0 ? void 0 : composer.removePass(effectPass);\n            if (normalPass)\n                normalPass.enabled = false;\n            if (downSamplingPass)\n                downSamplingPass.enabled = false;\n        };\n    }, [composer, children, camera, normalPass, downSamplingPass, instance]);\n    // Memoize state, otherwise it would trigger all consumers on every render\n    const state = useMemo(() => ({ composer, normalPass, downSamplingPass, resolutionScale, camera, scene }), [composer, normalPass, downSamplingPass, resolutionScale, camera, scene]);\n    // Expose the composer\n    useImperativeHandle(ref, () => composer, [composer]);\n    return (jsx(EffectComposerContext.Provider, { value: state, children: jsx(\"group\", { ref: group, children: children }) }));\n}));\n\nconst DepthOfField = forwardRef(function DepthOfField({ target, depthTexture, ...props }, ref) {\n    const invalidate = useThree((state) => state.invalidate);\n    const { camera } = useContext(EffectComposerContext);\n    const effect = useMemo(() => {\n        const effect = new DepthOfFieldEffect(camera, props);\n        // Temporary fix that restores DOF 6.21.3 behavior, everything since then lets shapes leak through the blur\n        const maskMaterial = effect.maskPass.getFullscreenMaterial();\n        maskMaterial.maskFunction = MaskFunction.MULTIPLY_RGB_SET_ALPHA;\n        return effect;\n    }, [camera, props]);\n    useLayoutEffect(() => {\n        if (target && typeof target !== 'number') {\n            const vec = target instanceof Vector3\n                ? new Vector3().set(target.x, target.y, target.z)\n                : new Vector3().set(target[0], target[1], target[2]);\n            effect.target = vec;\n        }\n        if (depthTexture)\n            effect.setDepthTexture(depthTexture.texture, depthTexture.packing);\n        invalidate();\n    }, [target, depthTexture, effect]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst Autofocus = forwardRef(({ target = undefined, mouse: followMouse = false, debug = undefined, manual = false, smoothTime = 0.25, ...props }, fref) => {\n    const dofRef = useRef(null);\n    const hitpointRef = useRef(null);\n    const targetRef = useRef(null);\n    const scene = useThree(({ scene }) => scene);\n    const pointer = useThree(({ pointer }) => pointer);\n    const { composer, camera } = useContext(EffectComposerContext);\n    // see: https://codesandbox.io/s/depthpickingpass-x130hg\n    const [depthPickingPass] = useState(() => new DepthPickingPass());\n    const [copyPass] = useState(() => new CopyPass());\n    useEffect(() => {\n        composer.addPass(depthPickingPass);\n        composer.addPass(copyPass);\n        return () => {\n            composer.removePass(depthPickingPass);\n            composer.removePass(copyPass);\n        };\n    }, [composer, depthPickingPass, copyPass]);\n    useEffect(() => {\n        return () => {\n            depthPickingPass.dispose();\n            copyPass.dispose();\n        };\n    }, [depthPickingPass, copyPass]);\n    const [hitpoint] = useState(() => new THREE.Vector3(0, 0, 0));\n    const [ndc] = useState(() => new THREE.Vector3(0, 0, 0));\n    const getHit = useCallback(async (x, y) => {\n        ndc.x = x;\n        ndc.y = y;\n        ndc.z = await depthPickingPass.readDepth(ndc);\n        ndc.z = ndc.z * 2.0 - 1.0;\n        const hit = 1 - ndc.z > 0.0000001; // it is missed if ndc.z is close to 1\n        return hit ? ndc.unproject(camera) : false;\n    }, [ndc, depthPickingPass, camera]);\n    const update = useCallback(async (delta, updateTarget = true) => {\n        var _a;\n        // Update hitpoint\n        if (target) {\n            hitpoint.set(...target);\n        }\n        else {\n            const { x, y } = followMouse ? pointer : { x: 0, y: 0 };\n            const hit = await getHit(x, y);\n            if (hit)\n                hitpoint.copy(hit);\n        }\n        // Update target\n        if (updateTarget && ((_a = dofRef.current) === null || _a === void 0 ? void 0 : _a.target)) {\n            if (smoothTime > 0 && delta > 0) {\n                easing.damp3(dofRef.current.target, hitpoint, smoothTime, delta);\n            }\n            else {\n                dofRef.current.target.copy(hitpoint);\n            }\n        }\n    }, [target, hitpoint, followMouse, getHit, smoothTime, pointer]);\n    useFrame(async (_, delta) => {\n        var _a;\n        if (!manual) {\n            update(delta);\n        }\n        if (hitpointRef.current) {\n            hitpointRef.current.position.copy(hitpoint);\n        }\n        if (targetRef.current && ((_a = dofRef.current) === null || _a === void 0 ? void 0 : _a.target)) {\n            targetRef.current.position.copy(dofRef.current.target);\n        }\n    });\n    // Ref API\n    const api = useMemo(() => ({\n        dofRef,\n        hitpoint,\n        update,\n    }), [hitpoint, update]);\n    useImperativeHandle(fref, () => api, [api]);\n    return (jsxs(Fragment, { children: [debug\n                ? createPortal(jsxs(Fragment, { children: [jsxs(\"mesh\", { ref: hitpointRef, children: [jsx(\"sphereGeometry\", { args: [debug, 16, 16] }), jsx(\"meshBasicMaterial\", { color: \"#00ff00\", opacity: 1, transparent: true, depthWrite: false })] }), jsxs(\"mesh\", { ref: targetRef, children: [jsx(\"sphereGeometry\", { args: [debug / 2, 16, 16] }), jsx(\"meshBasicMaterial\", { color: \"#00ff00\", opacity: 0.5, transparent: true, depthWrite: false })] })] }), scene)\n                : null, jsx(DepthOfField, { ref: dofRef, ...props, target: hitpoint })] }));\n});\n\nconst resolveRef = (ref) => typeof ref === 'object' && ref != null && 'current' in ref ? ref.current : ref;\nlet i = 0;\nconst components = new WeakMap();\nconst wrapEffect = (effect, defaults) => \n/* @__PURE__ */ React.forwardRef(function Effect({ blendFunction = defaults === null || defaults === void 0 ? void 0 : defaults.blendFunction, opacity = defaults === null || defaults === void 0 ? void 0 : defaults.opacity, ...props }, ref) {\n    let Component = components.get(effect);\n    if (!Component) {\n        const key = `@react-three/postprocessing/${effect.name}-${i++}`;\n        extend({ [key]: effect });\n        components.set(effect, (Component = key));\n    }\n    const camera = useThree((state) => state.camera);\n    const args = React.useMemo(() => { var _a, _b; return [...((_a = defaults === null || defaults === void 0 ? void 0 : defaults.args) !== null && _a !== void 0 ? _a : []), ...((_b = props.args) !== null && _b !== void 0 ? _b : [{ ...defaults, ...props }])]; }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(props)]);\n    return (jsx(Component, { camera: camera, \"blendMode-blendFunction\": blendFunction, \"blendMode-opacity-value\": opacity, ...props, ref: ref, args: args }));\n});\nconst useVector2 = (props, key) => {\n    const value = props[key];\n    return React.useMemo(() => {\n        if (typeof value === 'number')\n            return new THREE.Vector2(value, value);\n        else if (value)\n            return new THREE.Vector2(...value);\n        else\n            return new THREE.Vector2();\n    }, [value]);\n};\n\nconst Bloom = wrapEffect(BloomEffect, {\n    blendFunction: BlendFunction.ADD,\n});\n\nconst BrightnessContrast = wrapEffect(BrightnessContrastEffect);\n\nconst ChromaticAberration = forwardRef(function ChromaticAberration(props, ref) {\n    const offset = useVector2(props, 'offset');\n    const effect = useMemo(() => new ChromaticAberrationEffect({ ...props, offset }), [offset, props]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst ColorAverage = forwardRef(function ColorAverage({ blendFunction = BlendFunction.NORMAL }, ref) {\n    /** Because ColorAverage blendFunction is not an object but a number, we have to define a custom prop \"blendFunction\" */\n    const effect = useMemo(() => new ColorAverageEffect(blendFunction), [blendFunction]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst ColorDepth = wrapEffect(ColorDepthEffect);\n\nconst Depth = wrapEffect(DepthEffect);\n\nconst DotScreen = wrapEffect(DotScreenEffect);\n\nconst Glitch = forwardRef(function Glitch({ active = true, ...props }, ref) {\n    const invalidate = useThree((state) => state.invalidate);\n    const delay = useVector2(props, 'delay');\n    const duration = useVector2(props, 'duration');\n    const strength = useVector2(props, 'strength');\n    const effect = useMemo(() => new GlitchEffect({ ...props, delay, duration, strength }), [delay, duration, props, strength]);\n    useLayoutEffect(() => {\n        effect.mode = active ? props.mode || GlitchMode.SPORADIC : GlitchMode.DISABLED;\n        invalidate();\n    }, [active, effect, invalidate, props.mode]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst GodRays = forwardRef(function GodRays(props, ref) {\n    const { camera } = useContext(EffectComposerContext);\n    const effect = useMemo(() => new GodRaysEffect(camera, resolveRef(props.sun), props), [camera, props]);\n    // @ts-ignore v6.30.2 https://github.com/pmndrs/postprocessing/pull/470/commits/091ef6f9516ca02efa7576305afbecf1ce8323ae\n    useLayoutEffect(() => void (effect.lightSource = resolveRef(props.sun)), [effect, props.sun]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst Grid = forwardRef(function Grid({ size, ...props }, ref) {\n    const invalidate = useThree((state) => state.invalidate);\n    const effect = useMemo(() => new GridEffect(props), [props]);\n    useLayoutEffect(() => {\n        if (size)\n            effect.setSize(size.width, size.height);\n        invalidate();\n    }, [effect, size]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst HueSaturation = wrapEffect(HueSaturationEffect);\n\nconst Noise = wrapEffect(NoiseEffect, { blendFunction: BlendFunction.COLOR_DODGE });\n\nconst selectionContext = createContext(null);\nfunction Selection({ children, enabled = true }) {\n    const [selected, select] = useState([]);\n    const value = useMemo(() => ({ selected, select, enabled }), [selected, select, enabled]);\n    return jsx(selectionContext.Provider, { value: value, children: children });\n}\nfunction Select({ enabled = false, children, ...props }) {\n    const group = useRef(null);\n    const api = useContext(selectionContext);\n    useEffect(() => {\n        if (api && enabled) {\n            let changed = false;\n            const current = [];\n            group.current.traverse((o) => {\n                o.type === 'Mesh' && current.push(o);\n                if (api.selected.indexOf(o) === -1)\n                    changed = true;\n            });\n            if (changed) {\n                api.select((state) => [...state, ...current]);\n                return () => {\n                    api.select((state) => state.filter((selected) => !current.includes(selected)));\n                };\n            }\n        }\n    }, [enabled, children, api]);\n    return (jsx(\"group\", { ref: group, ...props, children: children }));\n}\n\nconst Outline = forwardRef(function Outline({ selection = [], selectionLayer = 10, blendFunction, patternTexture, edgeStrength, pulseSpeed, visibleEdgeColor, hiddenEdgeColor, width, height, kernelSize, blur, xRay, ...props }, forwardRef) {\n    const invalidate = useThree((state) => state.invalidate);\n    const { scene, camera } = useContext(EffectComposerContext);\n    const effect = useMemo(() => new OutlineEffect(scene, camera, {\n        blendFunction,\n        patternTexture,\n        edgeStrength,\n        pulseSpeed,\n        visibleEdgeColor,\n        hiddenEdgeColor,\n        width,\n        height,\n        kernelSize,\n        blur,\n        xRay,\n        ...props,\n    }), [\n        blendFunction,\n        blur,\n        camera,\n        edgeStrength,\n        height,\n        hiddenEdgeColor,\n        kernelSize,\n        patternTexture,\n        props,\n        pulseSpeed,\n        scene,\n        visibleEdgeColor,\n        width,\n        xRay,\n    ]);\n    const api = useContext(selectionContext);\n    useEffect(() => {\n        // Do not allow array selection if declarative selection is active\n        // TODO: array selection should probably be deprecated altogether\n        if (!api && selection) {\n            effect.selection.set(Array.isArray(selection) ? selection.map(resolveRef) : [resolveRef(selection)]);\n            invalidate();\n            return () => {\n                effect.selection.clear();\n                invalidate();\n            };\n        }\n    }, [effect, selection, api, invalidate]);\n    useEffect(() => {\n        effect.selectionLayer = selectionLayer;\n        invalidate();\n    }, [effect, invalidate, selectionLayer]);\n    useRef();\n    useEffect(() => {\n        var _a;\n        if (api && api.enabled) {\n            if ((_a = api.selected) === null || _a === void 0 ? void 0 : _a.length) {\n                effect.selection.set(api.selected);\n                invalidate();\n                return () => {\n                    effect.selection.clear();\n                    invalidate();\n                };\n            }\n        }\n    }, [api, effect.selection, invalidate]);\n    return jsx(\"primitive\", { ref: forwardRef, object: effect });\n});\n\nconst Pixelation = forwardRef(function Pixelation({ granularity = 5 }, ref) {\n    /** Because GlitchEffect granularity is not an object but a number, we have to define a custom prop \"granularity\" */\n    const effect = useMemo(() => new PixelationEffect(granularity), [granularity]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst Scanline = wrapEffect(ScanlineEffect, { blendFunction: BlendFunction.OVERLAY, density: 1.25 });\n\nconst addLight = (light, effect) => light.layers.enable(effect.selection.layer);\nconst removeLight = (light, effect) => light.layers.disable(effect.selection.layer);\nconst SelectiveBloom = forwardRef(function SelectiveBloom({ selection = [], selectionLayer = 10, lights = [], luminanceThreshold, luminanceSmoothing, intensity, width, height, kernelSize, mipmapBlur, ...props }, forwardRef) {\n    if (lights.length === 0) {\n        console.warn('SelectiveBloom requires lights to work.');\n    }\n    const invalidate = useThree((state) => state.invalidate);\n    const { scene, camera } = useContext(EffectComposerContext);\n    const effect = useMemo(() => new SelectiveBloomEffect(scene, camera, {\n        blendFunction: BlendFunction.ADD,\n        luminanceThreshold,\n        luminanceSmoothing,\n        intensity,\n        width,\n        height,\n        kernelSize,\n        mipmapBlur,\n        ...props,\n    }), [scene, camera, luminanceThreshold, luminanceSmoothing, intensity, width, height, kernelSize, mipmapBlur, props]);\n    const api = useContext(selectionContext);\n    useEffect(() => {\n        // Do not allow array selection if declarative selection is active\n        // TODO: array selection should probably be deprecated altogether\n        if (!api && selection) {\n            effect.selection.set(Array.isArray(selection) ? selection.map(resolveRef) : [resolveRef(selection)]);\n            invalidate();\n            return () => {\n                effect.selection.clear();\n                invalidate();\n            };\n        }\n    }, [effect, selection, api, invalidate]);\n    useEffect(() => {\n        effect.selection.layer = selectionLayer;\n        invalidate();\n    }, [effect, invalidate, selectionLayer]);\n    useEffect(() => {\n        if (lights && lights.length > 0) {\n            lights.forEach((light) => addLight(resolveRef(light), effect));\n            invalidate();\n            return () => {\n                lights.forEach((light) => removeLight(resolveRef(light), effect));\n                invalidate();\n            };\n        }\n    }, [effect, invalidate, lights, selectionLayer]);\n    useEffect(() => {\n        var _a;\n        if (api && api.enabled) {\n            if ((_a = api.selected) === null || _a === void 0 ? void 0 : _a.length) {\n                effect.selection.set(api.selected);\n                invalidate();\n                return () => {\n                    effect.selection.clear();\n                    invalidate();\n                };\n            }\n        }\n    }, [api, effect.selection, invalidate]);\n    return jsx(\"primitive\", { ref: forwardRef, object: effect, dispose: null });\n});\n\nconst Sepia = wrapEffect(SepiaEffect);\n\nconst SSAO = forwardRef(function SSAO(props, ref) {\n    const { camera, normalPass, downSamplingPass, resolutionScale } = useContext(EffectComposerContext);\n    const effect = useMemo(() => {\n        if (normalPass === null && downSamplingPass === null) {\n            console.error('Please enable the NormalPass in the EffectComposer in order to use SSAO.');\n            return {};\n        }\n        return new SSAOEffect(camera, normalPass && !downSamplingPass ? normalPass.texture : null, {\n            blendFunction: BlendFunction.MULTIPLY,\n            samples: 30,\n            rings: 4,\n            distanceThreshold: 1.0,\n            distanceFalloff: 0.0,\n            rangeThreshold: 0.5,\n            rangeFalloff: 0.1,\n            luminanceInfluence: 0.9,\n            radius: 20,\n            bias: 0.5,\n            intensity: 1.0,\n            color: undefined,\n            // @ts-ignore\n            normalDepthBuffer: downSamplingPass ? downSamplingPass.texture : null,\n            resolutionScale: resolutionScale !== null && resolutionScale !== void 0 ? resolutionScale : 1,\n            depthAwareUpsampling: true,\n            ...props,\n        });\n    }, [camera, normalPass, props]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst SMAA = wrapEffect(SMAAEffect);\n\nconst Texture = forwardRef(function Texture({ textureSrc, texture, ...props }, ref) {\n    const t = useLoader(TextureLoader, textureSrc);\n    useLayoutEffect(() => {\n        t.encoding = sRGBEncoding;\n        t.wrapS = t.wrapT = RepeatWrapping;\n    }, [t]);\n    const effect = useMemo(() => new TextureEffect({ ...props, texture: t || texture }), [props, t, texture]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst ToneMapping = wrapEffect(ToneMappingEffect);\n\nconst Vignette = wrapEffect(VignetteEffect);\n\nconst ShockWave = wrapEffect(ShockWaveEffect);\n\nconst LUT = forwardRef(function LUT({ lut, tetrahedralInterpolation, ...props }, ref) {\n    const effect = useMemo(() => new LUT3DEffect(lut, props), [lut, props]);\n    const invalidate = useThree((state) => state.invalidate);\n    useLayoutEffect(() => {\n        if (tetrahedralInterpolation)\n            effect.tetrahedralInterpolation = tetrahedralInterpolation;\n        if (lut)\n            effect.lut = lut;\n        invalidate();\n    }, [effect, invalidate, lut, tetrahedralInterpolation]);\n    return jsx(\"primitive\", { ref: ref, object: effect, dispose: null });\n});\n\nconst TiltShift = wrapEffect(TiltShiftEffect$1, { blendFunction: BlendFunction.ADD });\n\nconst TiltShiftShader = {\n    fragmentShader: `\n\n    // original shader by Evan Wallace\n\n    #define MAX_ITERATIONS 100\n\n    uniform float blur;\n    uniform float taper;\n    uniform vec2 start;\n    uniform vec2 end;\n    uniform vec2 direction;\n    uniform int samples;\n\n    float random(vec3 scale, float seed) {\n        /* use the fragment position for a different seed per-pixel */\n        return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n\n    void mainImage(const in vec4 inputColor, const in vec2 uv, out vec4 outputColor) {\n        vec4 color = vec4(0.0);\n        float total = 0.0;\n        vec2 startPixel = vec2(start.x * resolution.x, start.y * resolution.y);\n        vec2 endPixel = vec2(end.x * resolution.x, end.y * resolution.y);\n        float f_samples = float(samples);\n        float half_samples = f_samples / 2.0;\n\n        // use screen diagonal to normalize blur radii\n        float maxScreenDistance = distance(vec2(0.0), resolution); // diagonal distance\n        float gradientRadius = taper * (maxScreenDistance);\n        float blurRadius = blur * (maxScreenDistance / 16.0);\n\n        /* randomize the lookup values to hide the fixed number of samples */\n        float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n        vec2 normal = normalize(vec2(startPixel.y - endPixel.y, endPixel.x - startPixel.x));\n        float radius = smoothstep(0.0, 1.0, abs(dot(uv * resolution - startPixel, normal)) / gradientRadius) * blurRadius;\n\n        #pragma unroll_loop_start\n        for (int i = 0; i <= MAX_ITERATIONS; i++) {\n            if (i >= samples) { break; } // return early if over sample count\n            float f_i = float(i);\n            float s_i = -half_samples + f_i;\n            float percent = (s_i + offset - 0.5) / half_samples;\n            float weight = 1.0 - abs(percent);\n            vec4 sample_i = texture2D(inputBuffer, uv + normalize(direction) / resolution * percent * radius);\n            /* switch to pre-multiplied alpha to correctly blur transparent images */\n            sample_i.rgb *= sample_i.a;\n            color += sample_i * weight;\n            total += weight;\n        }\n        #pragma unroll_loop_end\n\n        outputColor = color / total;\n\n        /* switch back from pre-multiplied alpha */\n        outputColor.rgb /= outputColor.a + 0.00001;\n    }\n    `,\n};\nclass TiltShiftEffect extends Effect {\n    constructor({ blendFunction = BlendFunction.NORMAL, blur = 0.15, // [0, 1], can go beyond 1 for extra\n    taper = 0.5, // [0, 1], can go beyond 1 for extra\n    start = [0.5, 0.0], // [0,1] percentage x,y of screenspace\n    end = [0.5, 1.0], // [0,1] percentage x,y of screenspace\n    samples = 10.0, // number of blur samples\n    direction = [1, 1], // direction of blur\n     } = {}) {\n        super('TiltShiftEffect', TiltShiftShader.fragmentShader, {\n            blendFunction,\n            attributes: EffectAttribute.CONVOLUTION,\n            uniforms: new Map([\n                ['blur', new Uniform(blur)],\n                ['taper', new Uniform(taper)],\n                ['start', new Uniform(start)],\n                ['end', new Uniform(end)],\n                ['samples', new Uniform(samples)],\n                ['direction', new Uniform(direction)],\n            ]),\n        });\n    }\n}\nconst TiltShift2 = wrapEffect(TiltShiftEffect, { blendFunction: BlendFunction.NORMAL });\n\nconst SSR = forwardRef(function SSR({ ENABLE_BLUR = true, USE_MRT = true, ...props }, ref) {\n    const { invalidate } = useThree();\n    const { scene, camera } = useContext(EffectComposerContext);\n    const effect = useMemo(() => new SSREffect(scene, camera, { ENABLE_BLUR, USE_MRT, ...props }), [scene, camera, ENABLE_BLUR, USE_MRT, props]);\n    const api = useContext(selectionContext);\n    useEffect(() => {\n        var _a;\n        if (api && api.enabled) {\n            if ((_a = api.selected) === null || _a === void 0 ? void 0 : _a.length) {\n                effect.selection.set(api.selected);\n                invalidate();\n                return () => {\n                    effect.selection.clear();\n                    invalidate();\n                };\n            }\n        }\n    }, [api]);\n    return jsx(\"primitive\", { ref: ref, object: effect, ...props });\n});\n\nexport { Autofocus, Bloom, BrightnessContrast, ChromaticAberration, ColorAverage, ColorDepth, Depth, DepthOfField, DotScreen, EffectComposer, EffectComposerContext, Glitch, GodRays, Grid, HueSaturation, LUT, Noise, Outline, Pixelation, SMAA, SSAO, SSR, Scanline, Select, Selection, SelectiveBloom, Sepia, ShockWave, Texture, TiltShift, TiltShift2, TiltShiftEffect, ToneMapping, Vignette, resolveRef, selectionContext, useVector2, wrapEffect };\n", "import { Pass, RenderPass, DepthPass, Effect, Selection } from 'postprocessing';\nimport { ShaderMaterial, Uniform, Vector2, Matrix3, TangentSpaceNormalMap, GLSL3, Matrix4, Vector3, WebGLRenderTarget, LinearFilter, HalfFloatType, WebGLMultipleRenderTargets, ShaderChunk, Color, Quaternion, VideoTexture, DataTexture, RGBAFormat, FloatType, NearestFilter, FramebufferTexture, WebGLCubeRenderTarget, CubeCamera, PMREMGenerator, Texture } from 'three';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar boxBlur = \"#define GLSLIFY 1\\nuniform float blur;uniform float blurSharpness;uniform int blurKernel;vec3 denoise(vec3 center,sampler2D tex,vec2 uv,vec2 invTexSize,float blur,float blurSharpness,int blurKernel){vec3 color;float total;vec3 col;float weight;for(int x=-blurKernel;x<=blurKernel;x++){for(int y=-blurKernel;y<=blurKernel;y++){col=textureLod(tex,uv+vec2(x,y)*invTexSize,0.).rgb;weight=1.0-abs(dot(col-center,vec3(0.25)));weight=pow(weight,blurSharpness);color+=col*weight;total+=weight;}}return color/total;}\"; // eslint-disable-line\n\nvar finalSSRShader = \"#define GLSLIFY 1\\n#define MODE_DEFAULT 0\\n#define MODE_REFLECTIONS 1\\n#define MODE_RAW_REFLECTION 2\\n#define MODE_BLURRED_REFLECTIONS 3\\n#define MODE_INPUT 4\\n#define MODE_BLUR_MIX 5\\n#define FLOAT_EPSILON 0.00001\\nuniform sampler2D inputTexture;uniform sampler2D reflectionsTexture;uniform float samples;\\n#include <boxBlur>\\nvoid mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec4 reflectionsTexel=texture2D(reflectionsTexture,vUv);ivec2 size=textureSize(reflectionsTexture,0);vec2 invTexSize=1./vec2(size.x,size.y);vec3 reflectionClr=reflectionsTexel.xyz;if(blur>FLOAT_EPSILON){vec3 blurredReflectionsColor=denoise(reflectionsTexel.rgb,reflectionsTexture,vUv,invTexSize,blur,blurSharpness,blurKernel);reflectionClr=mix(reflectionClr,blurredReflectionsColor.rgb,blur);}\\n#if RENDER_MODE == MODE_DEFAULT\\noutputColor=vec4(inputColor.rgb+reflectionClr,1.0);\\n#endif\\n#if RENDER_MODE == MODE_REFLECTIONS\\noutputColor=vec4(reflectionClr,1.0);\\n#endif\\n#if RENDER_MODE == MODE_RAW_REFLECTION\\noutputColor=vec4(reflectionsTexel.xyz,1.0);\\n#endif\\n#if RENDER_MODE == MODE_BLURRED_REFLECTIONS\\noutputColor=vec4(blurredReflectionsTexel.xyz,1.0);\\n#endif\\n#if RENDER_MODE == MODE_INPUT\\noutputColor=vec4(inputColor.xyz,1.0);\\n#endif\\n#if RENDER_MODE == MODE_BLUR_MIX\\noutputColor=vec4(vec3(blur),1.0);\\n#endif\\n}\"; // eslint-disable-line\n\nvar helperFunctions = \"#define GLSLIFY 1\\nvec3 getViewPosition(const float depth){float clipW=_projectionMatrix[2][3]*depth+_projectionMatrix[3][3];vec4 clipPosition=vec4((vec3(vUv,depth)-0.5)*2.0,1.0);clipPosition*=clipW;return(_inverseProjectionMatrix*clipPosition).xyz;}float getViewZ(const in float depth){\\n#ifdef PERSPECTIVE_CAMERA\\nreturn perspectiveDepthToViewZ(depth,cameraNear,cameraFar);\\n#else\\nreturn orthographicDepthToViewZ(depth,cameraNear,cameraFar);\\n#endif\\n}vec3 screenSpaceToWorldSpace(const vec2 uv,const float depth){vec4 ndc=vec4((uv.x-0.5)*2.0,(uv.y-0.5)*2.0,(depth-0.5)*2.0,1.0);vec4 clip=_inverseProjectionMatrix*ndc;vec4 view=cameraMatrixWorld*(clip/clip.w);return view.xyz;}\\n#define Scale (vec3(0.8, 0.8, 0.8))\\n#define K (19.19)\\nvec3 hash(vec3 a){a=fract(a*Scale);a+=dot(a,a.yxz+K);return fract((a.xxy+a.yxx)*a.zyx);}float fresnel_dielectric_cos(float cosi,float eta){float c=abs(cosi);float g=eta*eta-1.0+c*c;float result;if(g>0.0){g=sqrt(g);float A=(g-c)/(g+c);float B=(c*(g+c)-1.0)/(c*(g-c)+1.0);result=0.5*A*A*(1.0+B*B);}else{result=1.0;}return result;}float fresnel_dielectric(vec3 Incoming,vec3 Normal,float eta){float cosine=dot(Incoming,Normal);return min(1.0,5.0*fresnel_dielectric_cos(cosine,eta));}\"; // eslint-disable-line\n\nvar trCompose = \"#define GLSLIFY 1\\n#define INV_EULER 0.36787944117144233\\nalpha=velocityDisocclusion<FLOAT_EPSILON ?(alpha+0.0075): 0.0;alpha=clamp(alpha,0.0,1.0);bool needsBlur=!didReproject||velocityDisocclusion>0.5;\\n#ifdef boxBlur\\nif(needsBlur)inputColor=boxBlurredColor;\\n#endif\\nif(alpha==1.0){outputColor=accumulatedColor;}else{float m=mix(alpha,1.0,blend);if(needsBlur)m=0.0;outputColor=accumulatedColor*m+inputColor*(1.0-m);}\"; // eslint-disable-line\n\n// WebGL2: will render normals to RGB channel of \"gNormal\" buffer, roughness to A channel of \"gNormal\" buffer, depth to RGBA channel of \"gDepth\" buffer\n// and velocity to \"gVelocity\" buffer\n\nclass MRTMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      type: \"MRTMaterial\",\n      defines: {\n        USE_UV: \"\",\n        TEMPORAL_RESOLVE: \"\"\n      },\n      uniforms: {\n        opacity: new Uniform(1),\n        normalMap: new Uniform(null),\n        normalScale: new Uniform(new Vector2(1, 1)),\n        uvTransform: new Uniform(new Matrix3()),\n        roughness: new Uniform(1),\n        roughnessMap: new Uniform(null)\n      },\n      vertexShader:\n      /* glsl */\n      `\n                #ifdef USE_MRT\n                 varying vec2 vHighPrecisionZW;\n                #endif\n                #define NORMAL\n                #if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n                    varying vec3 vViewPosition;\n                #endif\n                #include <common>\n                #include <uv_pars_vertex>\n                #include <displacementmap_pars_vertex>\n                #include <normal_pars_vertex>\n                #include <morphtarget_pars_vertex>\n                #include <skinning_pars_vertex>\n                #include <logdepthbuf_pars_vertex>\n                #include <clipping_planes_pars_vertex>\n                void main() {\n                    #include <uv_vertex>\n                    #include <beginnormal_vertex>\n                    #include <morphnormal_vertex>\n                    #include <skinbase_vertex>\n                    #include <skinnormal_vertex>\n                    #include <defaultnormal_vertex>\n                    #include <normal_vertex>\n                    #include <begin_vertex>\n                    #include <morphtarget_vertex>\n                    #include <skinning_vertex>\n                    #include <displacementmap_vertex>\n                    #include <project_vertex>\n                    #include <logdepthbuf_vertex>\n                    #include <clipping_planes_vertex>\n                    #if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n                        vViewPosition = - mvPosition.xyz;\n                    #endif\n                    #ifdef USE_MRT\n                        vHighPrecisionZW = gl_Position.zw;\n                    #endif \n                    #ifdef USE_UV\n                        vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n                    #endif\n                }\n            `,\n      fragmentShader:\n      /* glsl */\n      `\n                 #define NORMAL\n                #if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n                    varying vec3 vViewPosition;\n                #endif\n                #include <packing>\n                #include <uv_pars_fragment>\n                #include <normal_pars_fragment>\n                #include <bumpmap_pars_fragment>\n                #include <normalmap_pars_fragment>\n                #include <logdepthbuf_pars_fragment>\n                #include <clipping_planes_pars_fragment>\n                #include <roughnessmap_pars_fragment>\n                \n                #ifdef USE_MRT\n                layout(location = 0) out vec4 gNormal;\n                layout(location = 1) out vec4 gDepth;\n                \n                varying vec2 vHighPrecisionZW;\n                #endif\n                uniform float roughness;\n                void main() {\n                    #include <clipping_planes_fragment>\n                    #include <logdepthbuf_fragment>\n                    #include <normal_fragment_begin>\n                    #include <normal_fragment_maps>\n\n                    float roughnessFactor = roughness;\n                    \n                    if(roughness > 10.0e9){\n                        roughnessFactor = 1.;\n                    }else{\n                        #ifdef useRoughnessMap\n                            vec4 texelRoughness = texture2D( roughnessMap, vUv );\n                            // reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n                            roughnessFactor *= texelRoughness.g;\n                        #endif\n                    }\n\n                    vec3 normalColor = packNormalToRGB( normal );\n                    #ifdef USE_MRT\n                        float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n                        vec4 depthColor = packDepthToRGBA( fragCoordZ );\n                        gNormal = vec4( normalColor, roughnessFactor );\n                        gDepth = depthColor;\n                    #else\n                        gl_FragColor = vec4(normalColor, roughnessFactor);\n                    #endif\n                }\n            `,\n      toneMapped: false\n    });\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    Object.defineProperty(this, \"glslVersion\", {\n      get() {\n        return \"USE_MRT\" in this.defines ? GLSL3 : null;\n      },\n\n      set(_) {}\n\n    });\n  }\n\n}\n\nvar vertexShader$1 = \"#define GLSLIFY 1\\nvarying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}\"; // eslint-disable-line\n\nvar fragmentShader = \"#define GLSLIFY 1\\nvarying vec2 vUv;uniform sampler2D inputTexture;uniform sampler2D accumulatedTexture;uniform sampler2D normalTexture;uniform sampler2D depthTexture;uniform sampler2D envMap;uniform mat4 _projectionMatrix;uniform mat4 _inverseProjectionMatrix;uniform mat4 cameraMatrixWorld;uniform float cameraNear;uniform float cameraFar;uniform float rayDistance;uniform float intensity;uniform float maxDepthDifference;uniform float roughnessFade;uniform float maxRoughness;uniform float fade;uniform float thickness;uniform float ior;uniform float samples;uniform float jitter;uniform float jitterRoughness;\\n#define INVALID_RAY_COORDS vec2(-1.0);\\n#define EARLY_OUT_COLOR vec4(0.0, 0.0, 0.0, 1.0)\\n#define FLOAT_EPSILON 0.00001\\nfloat nearMinusFar;float nearMulFar;float farMinusNear;\\n#include <packing>\\n#include <helperFunctions>\\nvec2 RayMarch(vec3 dir,inout vec3 hitPos,inout float rayHitDepthDifference);vec2 BinarySearch(in vec3 dir,inout vec3 hitPos,inout float rayHitDepthDifference);float fastGetViewZ(const in float depth);vec3 getIBLRadiance(const in vec3 viewDir,const in vec3 normal,const in float roughness);void main(){vec4 depthTexel=textureLod(depthTexture,vUv,0.0);if(dot(depthTexel.rgb,depthTexel.rgb)<FLOAT_EPSILON){gl_FragColor=EARLY_OUT_COLOR;return;}float unpackedDepth=unpackRGBAToDepth(depthTexel);vec4 normalTexel=textureLod(normalTexture,vUv,0.0);float roughness=normalTexel.a;float specular=1.0-roughness;nearMinusFar=cameraNear-cameraFar;nearMulFar=cameraNear*cameraFar;farMinusNear=cameraFar-cameraNear;normalTexel.rgb=unpackRGBToNormal(normalTexel.rgb);float depth=fastGetViewZ(unpackedDepth);vec3 viewPos=getViewPosition(depth);vec3 viewDir=normalize(viewPos);vec3 viewNormal=normalTexel.xyz;vec3 worldPos=screenSpaceToWorldSpace(vUv,unpackedDepth);vec3 jitt=vec3(0.0);if(jitterRoughness!=0.0||jitter!=0.0){vec3 randomJitter=hash(50.0*samples*worldPos)-0.5;float spread=((2.0-specular)+roughness*jitterRoughness);float jitterMix=jitter*0.25+jitterRoughness*roughness;if(jitterMix>1.0)jitterMix=1.0;jitt=mix(vec3(0.0),randomJitter*spread,jitterMix);}viewNormal+=jitt;float fresnelFactor=fresnel_dielectric(viewDir,viewNormal,ior);vec3 iblRadiance=getIBLRadiance(-viewDir,viewNormal,0.)*fresnelFactor;float lastFrameAlpha=textureLod(accumulatedTexture,vUv,0.0).a;if(roughness>maxRoughness||(roughness>1.0-FLOAT_EPSILON&&roughnessFade>1.0-FLOAT_EPSILON)){gl_FragColor=vec4(iblRadiance,lastFrameAlpha);return;}vec3 reflected=reflect(viewDir,viewNormal);vec3 rayDir=reflected*-viewPos.z;vec3 hitPos=viewPos;float rayHitDepthDifference;vec2 coords=RayMarch(rayDir,hitPos,rayHitDepthDifference);if(coords.x==-1.0){gl_FragColor=vec4(iblRadiance,lastFrameAlpha);return;}vec4 SSRTexel=textureLod(inputTexture,coords.xy,0.0);vec4 SSRTexelReflected=textureLod(accumulatedTexture,coords.xy,0.0);vec3 SSR=SSRTexel.rgb+SSRTexelReflected.rgb;float roughnessFactor=mix(specular,1.0,max(0.0,1.0-roughnessFade));vec2 coordsNDC=(coords.xy*2.0-1.0);float screenFade=0.1;float maxDimension=min(1.0,max(abs(coordsNDC.x),abs(coordsNDC.y)));float reflectionIntensity=1.0-(max(0.0,maxDimension-screenFade)/(1.0-screenFade));reflectionIntensity=max(0.,reflectionIntensity);vec3 finalSSR=mix(iblRadiance,SSR,reflectionIntensity)*roughnessFactor;if(fade!=0.0){vec3 hitWorldPos=screenSpaceToWorldSpace(coords,rayHitDepthDifference);float reflectionDistance=distance(hitWorldPos,worldPos)+1.0;float opacity=1.0/(reflectionDistance*fade*0.1);if(opacity>1.0)opacity=1.0;finalSSR*=opacity;}finalSSR*=fresnelFactor*intensity;finalSSR=min(vec3(1.0),finalSSR);float alpha=hitPos.z==1.0 ? 1.0 : SSRTexelReflected.a;alpha=min(lastFrameAlpha,alpha);gl_FragColor=vec4(finalSSR,alpha);}vec2 RayMarch(vec3 dir,inout vec3 hitPos,inout float rayHitDepthDifference){dir=normalize(dir);dir*=rayDistance/float(steps);float depth;vec4 projectedCoord;vec4 lastProjectedCoord;float unpackedDepth;vec4 depthTexel;for(int i=0;i<steps;i++){hitPos+=dir;projectedCoord=_projectionMatrix*vec4(hitPos,1.0);projectedCoord.xy/=projectedCoord.w;projectedCoord.xy=projectedCoord.xy*0.5+0.5;\\n#ifndef missedRays\\nif(projectedCoord.x<0.0||projectedCoord.x>1.0||projectedCoord.y<0.0||projectedCoord.y>1.0){return INVALID_RAY_COORDS;}\\n#endif\\ndepthTexel=textureLod(depthTexture,projectedCoord.xy,0.0);unpackedDepth=unpackRGBAToDepth(depthTexel);depth=fastGetViewZ(unpackedDepth);rayHitDepthDifference=depth-hitPos.z;if(rayHitDepthDifference>=0.0&&rayHitDepthDifference<thickness){\\n#if refineSteps == 0\\nif(dot(depthTexel.rgb,depthTexel.rgb)<FLOAT_EPSILON)return INVALID_RAY_COORDS;\\n#else\\nreturn BinarySearch(dir,hitPos,rayHitDepthDifference);\\n#endif\\n}\\n#ifndef missedRays\\nif(hitPos.z>0.0){return INVALID_RAY_COORDS;}\\n#endif\\nlastProjectedCoord=projectedCoord;}hitPos.z=1.0;\\n#ifndef missedRays\\nreturn INVALID_RAY_COORDS;\\n#endif\\nrayHitDepthDifference=unpackedDepth;return projectedCoord.xy;}vec2 BinarySearch(in vec3 dir,inout vec3 hitPos,inout float rayHitDepthDifference){float depth;vec4 projectedCoord;vec2 lastMinProjectedCoordXY;float unpackedDepth;vec4 depthTexel;for(int i=0;i<refineSteps;i++){projectedCoord=_projectionMatrix*vec4(hitPos,1.0);projectedCoord.xy/=projectedCoord.w;projectedCoord.xy=projectedCoord.xy*0.5+0.5;depthTexel=textureLod(depthTexture,projectedCoord.xy,0.0);unpackedDepth=unpackRGBAToDepth(depthTexel);depth=fastGetViewZ(unpackedDepth);rayHitDepthDifference=depth-hitPos.z;dir*=0.5;if(rayHitDepthDifference>0.0){hitPos-=dir;}else{hitPos+=dir;}}if(dot(depthTexel.rgb,depthTexel.rgb)<FLOAT_EPSILON)return INVALID_RAY_COORDS;if(abs(rayHitDepthDifference)>maxDepthDifference)return INVALID_RAY_COORDS;projectedCoord=_projectionMatrix*vec4(hitPos,1.0);projectedCoord.xy/=projectedCoord.w;projectedCoord.xy=projectedCoord.xy*0.5+0.5;rayHitDepthDifference=unpackedDepth;return projectedCoord.xy;}float fastGetViewZ(const in float depth){\\n#ifdef PERSPECTIVE_CAMERA\\nreturn nearMulFar/(farMinusNear*depth-cameraFar);\\n#else\\nreturn depth*nearMinusFar-cameraNear;\\n#endif\\n}\\n#include <common>\\n#include <cube_uv_reflection_fragment>\\nvec3 getIBLRadiance(const in vec3 viewDir,const in vec3 normal,const in float roughness){\\n#if defined(ENVMAP_TYPE_CUBE_UV)\\nvec3 reflectVec=reflect(-viewDir,normal);reflectVec=normalize(mix(reflectVec,normal,roughness*roughness));reflectVec=inverseTransformDirection(reflectVec,viewMatrix);vec4 envMapColor=textureCubeUV(envMap,reflectVec,roughness);return envMapColor.rgb*intensity;\\n#else\\nreturn vec3(0.0);\\n#endif\\n}\"; // eslint-disable-line\n\nclass ReflectionsMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      type: \"ReflectionsMaterial\",\n      uniforms: {\n        inputTexture: new Uniform(null),\n        accumulatedTexture: new Uniform(null),\n        normalTexture: new Uniform(null),\n        depthTexture: new Uniform(null),\n        _projectionMatrix: new Uniform(new Matrix4()),\n        _inverseProjectionMatrix: new Uniform(new Matrix4()),\n        cameraMatrixWorld: new Uniform(new Matrix4()),\n        cameraNear: new Uniform(0),\n        cameraFar: new Uniform(0),\n        rayDistance: new Uniform(0),\n        intensity: new Uniform(0),\n        roughnessFade: new Uniform(0),\n        fade: new Uniform(0),\n        thickness: new Uniform(0),\n        ior: new Uniform(0),\n        maxDepthDifference: new Uniform(0),\n        jitter: new Uniform(0),\n        jitterRoughness: new Uniform(0),\n        maxRoughness: new Uniform(0),\n        samples: new Uniform(0),\n        envMap: new Uniform(null),\n        envMapPosition: new Uniform(new Vector3()),\n        envMapSize: new Uniform(new Vector3()),\n        viewMatrix: new Uniform(new Matrix4())\n      },\n      defines: {\n        steps: 20,\n        refineSteps: 5,\n        CUBEUV_TEXEL_WIDTH: 0,\n        CUBEUV_TEXEL_HEIGHT: 0,\n        CUBEUV_MAX_MIP: 0,\n        vWorldPosition: \"worldPos\"\n      },\n      fragmentShader: fragmentShader.replace(\"#include <helperFunctions>\", helperFunctions),\n      vertexShader: vertexShader$1,\n      toneMapped: false,\n      depthWrite: false,\n      depthTest: false\n    });\n  }\n\n}\n\nconst getVisibleChildren = object => {\n  const queue = [object];\n  const objects = [];\n\n  while (queue.length !== 0) {\n    const mesh = queue.shift();\n    if (mesh.material) objects.push(mesh);\n\n    for (const c of mesh.children) {\n      if (c.visible) queue.push(c);\n    }\n  }\n\n  return objects;\n};\nconst generateCubeUVSize = parameters => {\n  const imageHeight = parameters.envMapCubeUVHeight;\n  if (imageHeight === null) return null;\n  const maxMip = Math.log2(imageHeight) - 2;\n  const texelHeight = 1.0 / imageHeight;\n  const texelWidth = 1.0 / (3 * Math.max(Math.pow(2, maxMip), 7 * 16));\n  return {\n    texelWidth,\n    texelHeight,\n    maxMip\n  };\n};\nconst setupEnvMap = (reflectionsMaterial, envMap, envMapCubeUVHeight) => {\n  reflectionsMaterial.uniforms.envMap.value = envMap;\n  const envMapCubeUVSize = generateCubeUVSize({\n    envMapCubeUVHeight\n  });\n  reflectionsMaterial.defines.ENVMAP_TYPE_CUBE_UV = \"\";\n  reflectionsMaterial.defines.CUBEUV_TEXEL_WIDTH = envMapCubeUVSize.texelWidth;\n  reflectionsMaterial.defines.CUBEUV_TEXEL_HEIGHT = envMapCubeUVSize.texelHeight;\n  reflectionsMaterial.defines.CUBEUV_MAX_MIP = envMapCubeUVSize.maxMip + \".0\";\n  reflectionsMaterial.needsUpdate = true;\n};\n\nconst isWebGL2Available = () => {\n  try {\n    const canvas = document.createElement(\"canvas\");\n    return !!(window.WebGL2RenderingContext && canvas.getContext(\"webgl2\"));\n  } catch (e) {\n    return false;\n  }\n};\n\nclass ReflectionsPass extends Pass {\n  constructor(ssrEffect, options = {}) {\n    super(\"ReflectionsPass\");\n    this.ssrEffect = void 0;\n    this.cachedMaterials = new WeakMap();\n    this.USE_MRT = false;\n    this.webgl1DepthPass = null;\n    this.visibleMeshes = [];\n    this.ssrEffect = ssrEffect;\n    this._scene = ssrEffect._scene;\n    this._camera = ssrEffect._camera;\n    this.fullscreenMaterial = new ReflectionsMaterial();\n    if (ssrEffect._camera.isPerspectiveCamera) this.fullscreenMaterial.defines.PERSPECTIVE_CAMERA = \"\";\n    const width = options.width || typeof window !== \"undefined\" ? window.innerWidth : 2000;\n    const height = options.height || typeof window !== \"undefined\" ? window.innerHeight : 1000;\n    this.renderTarget = new WebGLRenderTarget(width, height, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      type: HalfFloatType,\n      depthBuffer: false\n    });\n    this.renderPass = new RenderPass(this._scene, this._camera);\n    this.USE_MRT = isWebGL2Available();\n\n    if (this.USE_MRT) {\n      // buffers: normal, depth (2), roughness will be written to the alpha channel of the normal buffer\n      this.gBuffersRenderTarget = new WebGLMultipleRenderTargets(width, height, 2, {\n        minFilter: LinearFilter,\n        magFilter: LinearFilter\n      });\n      this.normalTexture = this.gBuffersRenderTarget.texture[0];\n      this.depthTexture = this.gBuffersRenderTarget.texture[1];\n    } else {\n      // depth pass\n      this.webgl1DepthPass = new DepthPass(this._scene, this._camera);\n      this.webgl1DepthPass.renderTarget.minFilter = LinearFilter;\n      this.webgl1DepthPass.renderTarget.magFilter = LinearFilter;\n      this.webgl1DepthPass.renderTarget.texture.minFilter = LinearFilter;\n      this.webgl1DepthPass.renderTarget.texture.magFilter = LinearFilter;\n      this.webgl1DepthPass.setSize(typeof window !== \"undefined\" ? window.innerWidth : 2000, typeof window !== \"undefined\" ? window.innerHeight : 1000); // render normals (in the rgb channel) and roughness (in the alpha channel) in gBuffersRenderTarget\n\n      this.gBuffersRenderTarget = new WebGLRenderTarget(width, height, {\n        minFilter: LinearFilter,\n        magFilter: LinearFilter\n      });\n      this.normalTexture = this.gBuffersRenderTarget.texture;\n      this.depthTexture = this.webgl1DepthPass.texture;\n    } // set up uniforms\n\n\n    this.fullscreenMaterial.uniforms.normalTexture.value = this.normalTexture;\n    this.fullscreenMaterial.uniforms.depthTexture.value = this.depthTexture;\n    this.fullscreenMaterial.uniforms.accumulatedTexture.value = this.ssrEffect.temporalResolvePass.accumulatedTexture;\n    this.fullscreenMaterial.uniforms.cameraMatrixWorld.value = this._camera.matrixWorld;\n    this.fullscreenMaterial.uniforms._projectionMatrix.value = this._camera.projectionMatrix;\n    this.fullscreenMaterial.uniforms._inverseProjectionMatrix.value = this._camera.projectionMatrixInverse;\n  }\n\n  setSize(width, height) {\n    this.renderTarget.setSize(width * this.ssrEffect.resolutionScale, height * this.ssrEffect.resolutionScale);\n    this.gBuffersRenderTarget.setSize(width * this.ssrEffect.resolutionScale, height * this.ssrEffect.resolutionScale);\n    this.fullscreenMaterial.uniforms.accumulatedTexture.value = this.ssrEffect.temporalResolvePass.accumulatedTexture;\n    this.fullscreenMaterial.needsUpdate = true;\n  }\n\n  dispose() {\n    this.renderTarget.dispose();\n    this.gBuffersRenderTarget.dispose();\n    this.renderPass.dispose();\n    if (!this.USE_MRT) this.webgl1DepthPass.dispose();\n    this.fullscreenMaterial.dispose();\n    this.normalTexture = null;\n    this.depthTexture = null;\n    this.velocityTexture = null;\n  }\n\n  keepMaterialMapUpdated(mrtMaterial, originalMaterial, prop, define) {\n    if (this.ssrEffect[define]) {\n      if (originalMaterial[prop] !== mrtMaterial[prop]) {\n        mrtMaterial[prop] = originalMaterial[prop];\n        mrtMaterial.uniforms[prop].value = originalMaterial[prop];\n\n        if (originalMaterial[prop]) {\n          mrtMaterial.defines[define] = \"\";\n        } else {\n          delete mrtMaterial.defines[define];\n        }\n\n        mrtMaterial.needsUpdate = true;\n      }\n    } else if (mrtMaterial[prop] !== undefined) {\n      mrtMaterial[prop] = undefined;\n      mrtMaterial.uniforms[prop].value = undefined;\n      delete mrtMaterial.defines[define];\n      mrtMaterial.needsUpdate = true;\n    }\n  }\n\n  setMRTMaterialInScene() {\n    this.visibleMeshes = getVisibleChildren(this._scene);\n\n    for (const c of this.visibleMeshes) {\n      if (c.material) {\n        const originalMaterial = c.material;\n        let [cachedOriginalMaterial, mrtMaterial] = this.cachedMaterials.get(c) || [];\n\n        if (originalMaterial !== cachedOriginalMaterial) {\n          if (mrtMaterial) mrtMaterial.dispose();\n          mrtMaterial = new MRTMaterial();\n          if (this.USE_MRT) mrtMaterial.defines.USE_MRT = \"\";\n          mrtMaterial.normalScale = originalMaterial.normalScale;\n          mrtMaterial.uniforms.normalScale.value = originalMaterial.normalScale;\n          const map = originalMaterial.map || originalMaterial.normalMap || originalMaterial.roughnessMap || originalMaterial.metalnessMap;\n          if (map) mrtMaterial.uniforms.uvTransform.value = map.matrix;\n          this.cachedMaterials.set(c, [originalMaterial, mrtMaterial]);\n        } // update the child's MRT material\n\n\n        this.keepMaterialMapUpdated(mrtMaterial, originalMaterial, \"normalMap\", \"useNormalMap\");\n        this.keepMaterialMapUpdated(mrtMaterial, originalMaterial, \"roughnessMap\", \"useRoughnessMap\");\n        mrtMaterial.uniforms.roughness.value = this.ssrEffect.selection.size === 0 || this.ssrEffect.selection.has(c) ? originalMaterial.roughness || 0 : 10e10;\n        c.material = mrtMaterial;\n      }\n    }\n  }\n\n  unsetMRTMaterialInScene() {\n    for (const c of this.visibleMeshes) {\n      var _c$material;\n\n      if (((_c$material = c.material) == null ? void 0 : _c$material.type) === \"MRTMaterial\") {\n        c.visible = true; // set material back to the original one\n\n        const [originalMaterial] = this.cachedMaterials.get(c);\n        c.material = originalMaterial;\n      }\n    }\n  }\n\n  render(renderer, inputBuffer) {\n    this.setMRTMaterialInScene();\n    renderer.setRenderTarget(this.gBuffersRenderTarget);\n    this.renderPass.render(renderer, this.gBuffersRenderTarget);\n    this.unsetMRTMaterialInScene(); // render depth and velocity in seperate passes\n\n    if (!this.USE_MRT) this.webgl1DepthPass.renderPass.render(renderer, this.webgl1DepthPass.renderTarget);\n    this.fullscreenMaterial.uniforms.inputTexture.value = inputBuffer.texture;\n    this.fullscreenMaterial.uniforms.samples.value = this.ssrEffect.temporalResolvePass.samples;\n    this.fullscreenMaterial.uniforms.cameraNear.value = this._camera.near;\n    this.fullscreenMaterial.uniforms.cameraFar.value = this._camera.far;\n    this.fullscreenMaterial.uniforms.viewMatrix.value.copy(this._camera.matrixWorldInverse);\n    renderer.setRenderTarget(this.renderTarget);\n    renderer.render(this.scene, this.camera);\n  }\n\n}\n\n/**\n* Options of the SSR effect\n* @typedef {Object} SSROptions\n* @property {Number} [intensity] intensity of the reflections\n* @property {Number} [exponent] exponent by which reflections will be potentiated when composing the current frame's reflections and the accumulated reflections into a final reflection; higher values will make reflections clearer by highlighting darker spots less\n* @property {Number} [distance] maximum distance a reflection ray can travel to find what it reflects\n* @property {Number} [fade] how much reflections will fade out by distance\n* @property {Number} [roughnessFade] how intense reflections should be on rough spots; a higher value will make reflections fade out quicker on rough spots\n* @property {Number} [thickness] maximum depth difference between a ray and the particular depth at its screen position before refining with binary search; higher values will result in better performance\n* @property {Number} [ior] Index of Refraction, used for calculating fresnel; reflections tend to be more intense the steeper the angle between them and the viewer is, the ior parameter sets how much the intensity varies\n* @property {Number} [maxRoughness] maximum roughness a texel can have to have reflections calculated for it\n* @property {Number} [maxDepthDifference] maximum depth difference between a ray and the particular depth at its screen position after refining with binary search; higher values will result in better performance\n* @property {Number} [blend] a value between 0 and 1 to set how much the last frame's reflections should be blended in; higher values will result in less noisy reflections when moving the camera but a more smeary look\n* @property {boolean} [correction] how much pixels should be corrected when doing temporal resolving; higher values will result in less smearing but more noise\n* @property {boolean} [correctionRadius] how many surrounding pixels will be used for neighborhood clamping; a higher value can reduce noise when moving the camera but will result in less performance\n* @property {Number} [blur] how much the blurred reflections should be mixed with the raw reflections\n* @property {Number} [blurKernel] kernel size of the Box Blur Filter; higher kernel sizes will result in blurrier reflections with more artifacts\n* @property {Number} [blurSharpness] exponent of the Box Blur filter; higher values will result in more sharpness\n* @property {Number} [jitter] how intense jittering should be\n* @property {Number} [jitterRoughness] how intense jittering should be in relation to a material's roughness\n* @property {Number} [steps] number of steps a reflection ray can maximally do to find an object it intersected (and thus reflects)\n* @property {Number} [refineSteps] once we had our ray intersect something, we need to find the exact point in space it intersected and thus it reflects; this can be done through binary search with the given number of maximum steps\n* @property {boolean} [missedRays] if there should still be reflections for rays for which a reflecting point couldn't be found; enabling this will result in stretched looking reflections which can look good or bad depending on the angle\n* @property {boolean} [useNormalMap] if roughness maps should be taken account of when calculating reflections\n* @property {boolean} [useRoughnessMap] if normal maps should be taken account of when calculating reflections\n* @property {Number} [resolutionScale] resolution of the SSR effect, a resolution of 0.5 means the effect will be rendered at half resolution\n* @property {Number} [velocityResolutionScale] resolution of the velocity buffer, a resolution of 0.5 means velocity will be rendered at half resolution\n*/\n\n/**\n * The options of the SSR effect\n * @type {SSROptions}\n */\nconst defaultSSROptions = {\n  intensity: 1,\n  exponent: 1,\n  distance: 10,\n  fade: 0,\n  roughnessFade: 1,\n  thickness: 10,\n  ior: 1.45,\n  maxRoughness: 1,\n  maxDepthDifference: 10,\n  blend: 0.9,\n  correction: 1,\n  correctionRadius: 1,\n  blur: 0.5,\n  blurKernel: 1,\n  blurSharpness: 10,\n  jitter: 0,\n  jitterRoughness: 0,\n  steps: 20,\n  refineSteps: 5,\n  missedRays: true,\n  useNormalMap: true,\n  useRoughnessMap: true,\n  resolutionScale: 1,\n  velocityResolutionScale: 1\n};\n\nvar vertexShader = \"#define GLSLIFY 1\\nvarying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}\"; // eslint-disable-line\n\nvar temporalResolve = \"#define GLSLIFY 1\\nuniform sampler2D inputTexture;uniform sampler2D accumulatedTexture;uniform sampler2D velocityTexture;uniform sampler2D lastVelocityTexture;uniform float blend;uniform float correction;uniform float exponent;uniform float samples;uniform vec2 invTexSize;uniform mat4 curInverseProjectionMatrix;uniform mat4 curCameraMatrixWorld;uniform mat4 prevInverseProjectionMatrix;uniform mat4 prevCameraMatrixWorld;varying vec2 vUv;\\n#define MAX_NEIGHBOR_DEPTH_DIFFERENCE 0.001\\n#define FLOAT_EPSILON 0.00001\\n#define FLOAT_ONE_MINUS_EPSILON 0.99999\\nvec3 transformexponent;vec3 undoColorTransformExponent;vec3 transformColor(vec3 color){if(exponent==1.0)return color;return pow(abs(color),transformexponent);}vec3 undoColorTransform(vec3 color){if(exponent==1.0)return color;return max(pow(abs(color),undoColorTransformExponent),vec3(0.0));}void main(){if(exponent!=1.0){transformexponent=vec3(1.0/exponent);undoColorTransformExponent=vec3(exponent);}vec4 inputTexel=textureLod(inputTexture,vUv,0.0);vec4 accumulatedTexel;vec3 inputColor=transformColor(inputTexel.rgb);vec3 accumulatedColor;float alpha=inputTexel.a;float velocityDisocclusion;bool didReproject=false;\\n#ifdef boxBlur\\nvec3 boxBlurredColor=inputTexel.rgb;\\n#endif\\nvec4 velocity=textureLod(velocityTexture,vUv,0.0);bool isMoving=alpha<1.0||dot(velocity.xy,velocity.xy)>0.0;if(isMoving){vec3 minNeighborColor=inputColor;vec3 maxNeighborColor=inputColor;vec3 col;vec2 neighborUv;vec2 reprojectedUv=vUv-velocity.xy;vec4 lastVelocity=textureLod(lastVelocityTexture,reprojectedUv,0.0);float depth=velocity.b;float closestDepth=depth;float lastClosestDepth=lastVelocity.b;float neighborDepth;float lastNeighborDepth;for(int x=-correctionRadius;x<=correctionRadius;x++){for(int y=-correctionRadius;y<=correctionRadius;y++){if(x!=0||y!=0){neighborUv=vUv+vec2(x,y)*invTexSize;vec4 neigborVelocity=textureLod(velocityTexture,neighborUv,0.0);neighborDepth=neigborVelocity.b;col=textureLod(inputTexture,neighborUv,0.0).xyz;int absX=abs(x);int absY=abs(y);\\n#ifdef dilation\\nif(absX==1&&absY==1){if(neighborDepth>closestDepth){velocity=neigborVelocity;closestDepth=neighborDepth;}vec4 lastNeighborVelocity=textureLod(velocityTexture,vUv+vec2(x,y)*invTexSize,0.0);lastNeighborDepth=lastNeighborVelocity.b;if(neighborDepth>closestDepth){lastVelocity=lastNeighborVelocity;lastClosestDepth=lastNeighborDepth;}}\\n#endif\\nif(abs(depth-neighborDepth)<MAX_NEIGHBOR_DEPTH_DIFFERENCE){\\n#ifdef boxBlur\\nif(absX<=2&&absY<=2)boxBlurredColor+=col;\\n#endif\\ncol=transformColor(col);minNeighborColor=min(col,minNeighborColor);maxNeighborColor=max(col,maxNeighborColor);}}}}float velocityLength=length(lastVelocity.xy-velocity.xy);velocityDisocclusion=(velocityLength-0.000005)*10.0;velocityDisocclusion*=velocityDisocclusion;reprojectedUv=vUv-velocity.xy;\\n#ifdef boxBlur\\nfloat pxRadius=correctionRadius>5 ? 121.0 : pow(float(correctionRadius*2+1),2.0);boxBlurredColor/=pxRadius;boxBlurredColor=transformColor(boxBlurredColor);\\n#endif\\nif(reprojectedUv.x>=0.0&&reprojectedUv.x<=1.0&&reprojectedUv.y>=0.0&&reprojectedUv.y<=1.0){accumulatedTexel=textureLod(accumulatedTexture,reprojectedUv,0.0);accumulatedColor=transformColor(accumulatedTexel.rgb);vec3 clampedColor=clamp(accumulatedColor,minNeighborColor,maxNeighborColor);accumulatedColor=mix(accumulatedColor,clampedColor,correction);didReproject=true;}else{\\n#ifdef boxBlur\\naccumulatedColor=boxBlurredColor;\\n#else\\naccumulatedColor=inputColor;\\n#endif\\n}if(velocity.r>FLOAT_ONE_MINUS_EPSILON&&velocity.g>FLOAT_ONE_MINUS_EPSILON){alpha=0.0;velocityDisocclusion=1.0;}}else{accumulatedColor=transformColor(textureLod(accumulatedTexture,vUv,0.0).rgb);}vec3 outputColor=inputColor;\\n#include <custom_compose_shader>\\ngl_FragColor=vec4(undoColorTransform(outputColor),alpha);}\"; // eslint-disable-line\n\nclass TemporalResolveMaterial extends ShaderMaterial {\n  constructor(customComposeShader) {\n    const fragmentShader = temporalResolve.replace(\"#include <custom_compose_shader>\", customComposeShader);\n    super({\n      type: \"TemporalResolveMaterial\",\n      uniforms: {\n        inputTexture: new Uniform(null),\n        accumulatedTexture: new Uniform(null),\n        velocityTexture: new Uniform(null),\n        lastVelocityTexture: new Uniform(null),\n        samples: new Uniform(1),\n        blend: new Uniform(0.5),\n        correction: new Uniform(1),\n        exponent: new Uniform(1),\n        invTexSize: new Uniform(new Vector2())\n      },\n      defines: {\n        correctionRadius: 1\n      },\n      vertexShader,\n      fragmentShader\n    });\n  }\n\n}\n\n// this shader is from: https://github.com/gkjohnson/threejs-sandbox\n// a second set of bone information from the previou frame\n\nconst prev_skinning_pars_vertex =\n/* glsl */\n`\n\t\t#ifdef USE_SKINNING\n\t\t#ifdef BONE_TEXTURE\n\t\t\tuniform sampler2D prevBoneTexture;\n\t\t\tmat4 getPrevBoneMatrix( const in float i ) {\n\t\t\t\tfloat j = i * 4.0;\n\t\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\t\ty = dy * ( y + 0.5 );\n\t\t\t\tvec4 v1 = texture2D( prevBoneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\t\tvec4 v2 = texture2D( prevBoneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\t\tvec4 v3 = texture2D( prevBoneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\t\tvec4 v4 = texture2D( prevBoneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\t\treturn bone;\n\t\t\t}\n\t\t#else\n\t\t\tuniform mat4 prevBoneMatrices[ MAX_BONES ];\n\t\t\tmat4 getPrevBoneMatrix( const in float i ) {\n\t\t\t\tmat4 bone = prevBoneMatrices[ int(i) ];\n\t\t\t\treturn bone;\n\t\t\t}\n\t\t#endif\n\t\t#endif\n`; // Returns the body of the vertex shader for the velocity buffer and\n// outputs the position of the current and last frame positions\n\nconst velocity_vertex =\n/* glsl */\n`\n\t\tvec3 transformed;\n\n\t\t// Get the normal\n\t\t${ShaderChunk.skinbase_vertex}\n\t\t${ShaderChunk.beginnormal_vertex}\n\t\t${ShaderChunk.skinnormal_vertex}\n\t\t${ShaderChunk.defaultnormal_vertex}\n\n\t\t// Get the current vertex position\n\t\ttransformed = vec3( position );\n\t\t${ShaderChunk.skinning_vertex}\n\t\tnewPosition = velocityMatrix * vec4( transformed, 1.0 );\n\n\t\t// Get the previous vertex position\n\t\ttransformed = vec3( position );\n\t\t${ShaderChunk.skinbase_vertex.replace(/mat4 /g, \"\").replace(/getBoneMatrix/g, \"getPrevBoneMatrix\")}\n\t\t${ShaderChunk.skinning_vertex.replace(/vec4 /g, \"\")}\n\t\tprevPosition = prevVelocityMatrix * vec4( transformed, 1.0 );\n\n\t\tgl_Position = newPosition;\n`;\nclass VelocityMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        prevVelocityMatrix: {\n          value: new Matrix4()\n        },\n        velocityMatrix: {\n          value: new Matrix4()\n        },\n        prevBoneTexture: {\n          value: null\n        },\n        interpolateGeometry: {\n          value: 0\n        },\n        intensity: {\n          value: 1\n        },\n        boneTexture: {\n          value: null\n        },\n        alphaTest: {\n          value: 0.0\n        },\n        map: {\n          value: null\n        },\n        alphaMap: {\n          value: null\n        },\n        opacity: {\n          value: 1.0\n        }\n      },\n      vertexShader:\n      /* glsl */\n      `\n                    #define MAX_BONES 1024\n                    \n                    ${ShaderChunk.skinning_pars_vertex}\n                    ${prev_skinning_pars_vertex}\n        \n                    uniform mat4 velocityMatrix;\n                    uniform mat4 prevVelocityMatrix;\n                    uniform float interpolateGeometry;\n                    varying vec4 prevPosition;\n                    varying vec4 newPosition;\n\t\t\t\t\tvarying vec2 vHighPrecisionZW;\n        \n                    void main() {\n        \n                        ${velocity_vertex}\n\n\t\t\t\t\t\tvHighPrecisionZW = gl_Position.zw;\n        \n                    }`,\n      fragmentShader:\n      /* glsl */\n      `\n                    uniform float intensity;\n                    varying vec4 prevPosition;\n                    varying vec4 newPosition;\n\t\t\t\t\tvarying vec2 vHighPrecisionZW;\n        \n                    void main() {\n\t\t\t\t\t\t#ifdef FULL_MOVEMENT\n\t\t\t\t\t\tgl_FragColor = vec4( 1., 1., 1. - gl_FragCoord.z, 0. );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t\t#endif\n\n                        vec2 pos0 = (prevPosition.xy / prevPosition.w) * 0.5 + 0.5;\n                        vec2 pos1 = (newPosition.xy / newPosition.w) * 0.5 + 0.5;\n        \n                        vec2 vel = pos1 - pos0;\n\n\t\t\t\t\t\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n                        \n                        gl_FragColor = vec4( vel, 1. - fragCoordZ, 0. );\n        \n                    }`\n    });\n    this.isVelocityMaterial = true;\n  }\n\n}\n\nconst backgroundColor = new Color(0);\nconst updateProperties = [\"visible\", \"wireframe\", \"side\"];\nclass VelocityPass extends Pass {\n  constructor(scene, camera) {\n    var _window, _window2;\n\n    super(\"VelocityPass\");\n    this.cachedMaterials = new WeakMap();\n    this.lastCameraTransform = {\n      position: new Vector3(),\n      quaternion: new Quaternion()\n    };\n    this.visibleMeshes = [];\n    this.renderedMeshesThisFrame = 0;\n    this.renderedMeshesLastFrame = 0;\n    this._scene = scene;\n    this._camera = camera;\n    this.renderTarget = new WebGLRenderTarget(((_window = window) == null ? void 0 : _window.innerWidth) || 1000, ((_window2 = window) == null ? void 0 : _window2.innerHeight) || 1000, {\n      type: HalfFloatType\n    });\n  }\n\n  setVelocityMaterialInScene() {\n    this.renderedMeshesThisFrame = 0;\n    this.visibleMeshes = getVisibleChildren(this._scene);\n\n    for (const c of this.visibleMeshes) {\n      var _c$skeleton2;\n\n      const originalMaterial = c.material;\n      let [cachedOriginalMaterial, velocityMaterial] = this.cachedMaterials.get(c) || [];\n\n      if (originalMaterial !== cachedOriginalMaterial) {\n        var _c$skeleton;\n\n        velocityMaterial = new VelocityMaterial();\n        velocityMaterial.lastMatrixWorld = new Matrix4();\n        c.material = velocityMaterial;\n        if ((_c$skeleton = c.skeleton) != null && _c$skeleton.boneTexture) this.saveBoneTexture(c);\n        this.cachedMaterials.set(c, [originalMaterial, velocityMaterial]);\n      }\n\n      velocityMaterial.uniforms.velocityMatrix.value.multiplyMatrices(this._camera.projectionMatrix, c.modelViewMatrix);\n\n      if (c.userData.needsUpdatedReflections || originalMaterial.map instanceof VideoTexture) {\n        if (!(\"FULL_MOVEMENT\" in velocityMaterial.defines)) velocityMaterial.needsUpdate = true;\n        velocityMaterial.defines.FULL_MOVEMENT = \"\";\n      } else {\n        if (\"FULL_MOVEMENT\" in velocityMaterial.defines) {\n          delete velocityMaterial.defines.FULL_MOVEMENT;\n          velocityMaterial.needsUpdate = true;\n        }\n      }\n\n      c.visible = this.cameraMovedThisFrame || !c.matrixWorld.equals(velocityMaterial.lastMatrixWorld) || c.skeleton || \"FULL_MOVEMENT\" in velocityMaterial.defines;\n      c.material = velocityMaterial;\n      if (!c.visible) continue;\n      this.renderedMeshesThisFrame++;\n\n      for (const prop of updateProperties) velocityMaterial[prop] = originalMaterial[prop];\n\n      if ((_c$skeleton2 = c.skeleton) != null && _c$skeleton2.boneTexture) {\n        velocityMaterial.defines.USE_SKINNING = \"\";\n        velocityMaterial.defines.BONE_TEXTURE = \"\";\n        velocityMaterial.uniforms.boneTexture.value = c.skeleton.boneTexture;\n      }\n    }\n  }\n\n  saveBoneTexture(object) {\n    let boneTexture = object.material.uniforms.prevBoneTexture.value;\n\n    if (boneTexture && boneTexture.image.width === object.skeleton.boneTexture.width) {\n      boneTexture = object.material.uniforms.prevBoneTexture.value;\n      boneTexture.image.data.set(object.skeleton.boneTexture.image.data);\n    } else {\n      var _boneTexture;\n\n      (_boneTexture = boneTexture) == null ? void 0 : _boneTexture.dispose();\n      const boneMatrices = object.skeleton.boneTexture.image.data.slice();\n      const size = object.skeleton.boneTexture.image.width;\n      boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n      object.material.uniforms.prevBoneTexture.value = boneTexture;\n      boneTexture.needsUpdate = true;\n    }\n  }\n\n  unsetVelocityMaterialInScene() {\n    for (const c of this.visibleMeshes) {\n      if (c.material.isVelocityMaterial) {\n        var _c$skeleton3;\n\n        c.visible = true;\n        c.material.lastMatrixWorld.copy(c.matrixWorld);\n        c.material.uniforms.prevVelocityMatrix.value.multiplyMatrices(this._camera.projectionMatrix, c.modelViewMatrix);\n        if ((_c$skeleton3 = c.skeleton) != null && _c$skeleton3.boneTexture) this.saveBoneTexture(c);\n        c.material = this.cachedMaterials.get(c)[0];\n      }\n    }\n  }\n\n  setSize(width, height) {\n    this.renderTarget.setSize(width, height);\n  }\n\n  renderVelocity(renderer) {\n    renderer.setRenderTarget(this.renderTarget);\n\n    if (this.renderedMeshesThisFrame > 0) {\n      const {\n        background\n      } = this._scene;\n      this._scene.background = backgroundColor;\n      renderer.render(this._scene, this._camera);\n      this._scene.background = background;\n    } else {\n      renderer.clearColor();\n    }\n  }\n\n  checkCameraMoved() {\n    const moveDist = this.lastCameraTransform.position.distanceToSquared(this._camera.position);\n    const rotateDist = 8 * (1 - this.lastCameraTransform.quaternion.dot(this._camera.quaternion));\n\n    if (moveDist > 0.000001 || rotateDist > 0.000001) {\n      this.lastCameraTransform.position.copy(this._camera.position);\n      this.lastCameraTransform.quaternion.copy(this._camera.quaternion);\n      return true;\n    }\n\n    return false;\n  }\n\n  render(renderer) {\n    this.cameraMovedThisFrame = this.checkCameraMoved();\n    this.setVelocityMaterialInScene();\n    if (this.renderedMeshesThisFrame > 0 || this.renderedMeshesLastFrame > 0) this.renderVelocity(renderer);\n    this.unsetVelocityMaterialInScene();\n    this.renderedMeshesLastFrame = this.renderedMeshesThisFrame;\n  }\n\n}\n\nconst zeroVec2 = new Vector2(); // the following variables can be accessed by the custom compose shader:\n// \"inputTexel\", \"accumulatedTexel\", \"inputColor\", \"accumulatedColor\", \"alpha\", \"velocityDisocclusion\", \"didReproject\", \"boxBlurredColor\" (if using box blur)\n// the custom compose shader will write the final color to the variable \"outputColor\"\n\nclass TemporalResolvePass extends Pass {\n  constructor(scene, camera, customComposeShader, options = {}) {\n    super(\"TemporalResolvePass\");\n    this.velocityPass = null;\n    this.velocityResolutionScale = 1;\n    this.samples = 1;\n    this.lastCameraTransform = {\n      position: new Vector3(),\n      quaternion: new Quaternion()\n    };\n    this._scene = scene;\n    this._camera = camera;\n    this.renderTarget = new WebGLRenderTarget(1, 1, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      type: HalfFloatType,\n      depthBuffer: false\n    });\n    this.velocityPass = new VelocityPass(scene, camera);\n    this.fullscreenMaterial = new TemporalResolveMaterial(customComposeShader);\n    this.fullscreenMaterial.defines.correctionRadius = options.correctionRadius || 1;\n    if (options.dilation) this.fullscreenMaterial.defines.dilation = \"\";\n    if (options.boxBlur) this.fullscreenMaterial.defines.boxBlur = \"\";\n    this.setupFramebuffers(1, 1);\n    this.checkCanUseSharedVelocityTexture();\n  }\n\n  dispose() {\n    if (this._scene.userData.velocityTexture === this.velocityPass.renderTarget.texture) {\n      delete this._scene.userData.velocityTexture;\n      delete this._scene.userData.lastVelocityTexture;\n    }\n\n    this.renderTarget.dispose();\n    this.accumulatedTexture.dispose();\n    this.fullscreenMaterial.dispose();\n    this.velocityPass.dispose();\n  }\n\n  setSize(width, height) {\n    this.renderTarget.setSize(width, height);\n    this.velocityPass.setSize(width * this.velocityResolutionScale, height * this.velocityResolutionScale);\n    this.velocityPass.renderTarget.texture.minFilter = this.velocityResolutionScale === 1 ? NearestFilter : LinearFilter;\n    this.velocityPass.renderTarget.texture.magFilter = this.velocityResolutionScale === 1 ? NearestFilter : LinearFilter;\n    this.velocityPass.renderTarget.texture.needsUpdate = true;\n    this.fullscreenMaterial.uniforms.invTexSize.value.set(1 / width, 1 / height);\n    this.setupFramebuffers(width, height);\n  }\n\n  setupFramebuffers(width, height) {\n    if (this.accumulatedTexture) this.accumulatedTexture.dispose();\n    if (this.lastVelocityTexture) this.lastVelocityTexture.dispose();\n    this.accumulatedTexture = new FramebufferTexture(width, height, RGBAFormat);\n    this.accumulatedTexture.minFilter = LinearFilter;\n    this.accumulatedTexture.magFilter = LinearFilter;\n    this.accumulatedTexture.type = HalfFloatType;\n    this.lastVelocityTexture = new FramebufferTexture(width * this.velocityResolutionScale, height * this.velocityResolutionScale, RGBAFormat);\n    this.lastVelocityTexture.minFilter = this.velocityResolutionScale === 1 ? NearestFilter : LinearFilter;\n    this.lastVelocityTexture.magFilter = this.velocityResolutionScale === 1 ? NearestFilter : LinearFilter;\n    this.lastVelocityTexture.type = HalfFloatType;\n    this.fullscreenMaterial.uniforms.accumulatedTexture.value = this.accumulatedTexture;\n    this.fullscreenMaterial.uniforms.lastVelocityTexture.value = this.lastVelocityTexture;\n    this.fullscreenMaterial.needsUpdate = true;\n  }\n\n  checkCanUseSharedVelocityTexture() {\n    const canUseSharedVelocityTexture = this._scene.userData.velocityTexture && this.velocityPass.renderTarget.texture !== this._scene.userData.velocityTexture;\n\n    if (canUseSharedVelocityTexture) {\n      // let's use the shared one instead\n      if (this.velocityPass.renderTarget.texture === this.fullscreenMaterial.uniforms.velocityTexture.value) {\n        this.fullscreenMaterial.uniforms.lastVelocityTexture.value = this._scene.userData.lastVelocityTexture;\n        this.fullscreenMaterial.uniforms.velocityTexture.value = this._scene.userData.velocityTexture;\n        this.fullscreenMaterial.needsUpdate = true;\n      }\n    } else {\n      // let's stop using the shared one (if used) and mark ours as the shared one instead\n      if (this.velocityPass.renderTarget.texture !== this.fullscreenMaterial.uniforms.velocityTexture.value) {\n        this.fullscreenMaterial.uniforms.velocityTexture.value = this.velocityPass.renderTarget.texture;\n        this.fullscreenMaterial.uniforms.lastVelocityTexture.value = this.lastVelocityTexture;\n        this.fullscreenMaterial.needsUpdate = true;\n\n        if (!this._scene.userData.velocityTexture) {\n          this._scene.userData.velocityTexture = this.velocityPass.renderTarget.texture;\n          this._scene.userData.lastVelocityTexture = this.lastVelocityTexture;\n        }\n      }\n    }\n\n    return this.velocityPass.renderTarget.texture !== this.fullscreenMaterial.uniforms.velocityTexture.value;\n  }\n\n  checkNeedsResample() {\n    const moveDist = this.lastCameraTransform.position.distanceToSquared(this._camera.position);\n    const rotateDist = 8 * (1 - this.lastCameraTransform.quaternion.dot(this._camera.quaternion));\n\n    if (moveDist > 0.000001 || rotateDist > 0.000001) {\n      this.samples = 1;\n      this.lastCameraTransform.position.copy(this._camera.position);\n      this.lastCameraTransform.quaternion.copy(this._camera.quaternion);\n    }\n  }\n\n  render(renderer) {\n    this.samples++;\n    this.checkNeedsResample();\n    this.fullscreenMaterial.uniforms.samples.value = this.samples; // const isUsingSharedVelocityTexture = this.checkCanUseSharedVelocityTexture()\n    // if (!isUsingSharedVelocityTexture) this.velocityPass.render(renderer)\n\n    renderer.setRenderTarget(this.renderTarget);\n    renderer.render(this.scene, this.camera); // save the render target's texture for use in next frame\n\n    renderer.copyFramebufferToTexture(zeroVec2, this.accumulatedTexture);\n    renderer.setRenderTarget(this.velocityPass.renderTarget);\n    renderer.copyFramebufferToTexture(zeroVec2, this.lastVelocityTexture);\n  }\n\n}\n\n// source: https://observablehq.com/@jrus/halton\nconst halton = function halton(index, base) {\n  let fraction = 1;\n  let result = 0;\n\n  while (index > 0) {\n    fraction /= base;\n    result += fraction * (index % base);\n    index = ~~(index / base); // floor division\n  }\n\n  return result;\n}; // generates Halton tuples in the range [-0.5:0.5]\n\n\nconst generateHalton23Points = count => {\n  const data = [];\n  let i = 1;\n  const end = i + count;\n\n  for (; i < end; i++) {\n    data.push([halton(i, 2) - 0.5, halton(i, 3) - 0.5]);\n  }\n\n  return data;\n};\n\n/* eslint-disable camelcase */\n\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n} // credits for the box-projecting shader code go to codercat (https://codercat.tk)\n\n\nconst worldposReplace =\n/* glsl */\n`\n#if defined( USE_ENVMAP ) || defined(  ) || defined ( USE_SHADOWMAP )\n    vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n    #ifdef BOX_PROJECTED_ENV_MAP\n        vWorldPosition = worldPosition.xyz;\n    #endif\n#endif\n`;\nconst boxProjectDefinitions =\n/* glsl */\n`\n#ifdef BOX_PROJECTED_ENV_MAP\n    uniform vec3 envMapSize;\n    uniform vec3 envMapPosition;\n    varying vec3 vWorldPosition;\n    \n    vec3 parallaxCorrectNormal( vec3 v, vec3 cubeSize, vec3 cubePos ) {\n        vec3 nDir = normalize( v );\n\n        vec3 rbmax = ( .5 * cubeSize + cubePos - vWorldPosition ) / nDir;\n        vec3 rbmin = ( -.5 * cubeSize + cubePos - vWorldPosition ) / nDir;\n\n        vec3 rbminmax;\n\n        rbminmax.x = ( nDir.x > 0. ) ? rbmax.x : rbmin.x;\n        rbminmax.y = ( nDir.y > 0. ) ? rbmax.y : rbmin.y;\n        rbminmax.z = ( nDir.z > 0. ) ? rbmax.z : rbmin.z;\n\n        float correction = min( min( rbminmax.x, rbminmax.y ), rbminmax.z );\n        vec3 boxIntersection = vWorldPosition + nDir * correction;\n        \n        return boxIntersection - cubePos;\n    }\n#endif\n`; // will be inserted after \"vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\"\n\nconst getIBLIrradiance_patch =\n/* glsl */\n`\n#ifdef BOX_PROJECTED_ENV_MAP\n    worldNormal = parallaxCorrectNormal( worldNormal, envMapSize, envMapPosition );\n#endif\n`; // will be inserted after \"reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\"\n\nconst getIBLRadiance_patch =\n/* glsl */\n`\n#ifdef BOX_PROJECTED_ENV_MAP\n    reflectVec = parallaxCorrectNormal( reflectVec, envMapSize, envMapPosition );\n#endif\n`;\nfunction useBoxProjectedEnvMap(shader, envMapPosition, envMapSize) {\n  // defines\n  shader.defines.BOX_PROJECTED_ENV_MAP = \"\"; // uniforms\n\n  shader.uniforms.envMapPosition = {\n    value: envMapPosition\n  };\n  shader.uniforms.envMapSize = {\n    value: envMapSize\n  };\n  const line1 = new RegExp(escapeRegExp(\"vec3 worldNormal = inverseTransformDirection ( normal , viewMatrix ) ;\").replaceAll(\" \", \"\\\\s*\"), \"g\");\n  const line2 = new RegExp(escapeRegExp(\"reflectVec = inverseTransformDirection ( reflectVec , viewMatrix ) ;\").replaceAll(\" \", \"\\\\s*\"), \"g\"); // vertex shader\n\n  shader.vertexShader = \"varying vec3 vWorldPosition;\\n\" + shader.vertexShader.replace(\"#include <worldpos_vertex>\", worldposReplace); // fragment shader\n\n  shader.fragmentShader = boxProjectDefinitions + \"\\n\" + shader.fragmentShader.replace(\"#include <envmap_physical_pars_fragment>\", ShaderChunk.envmap_physical_pars_fragment).replace(line1, `vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n                ${getIBLIrradiance_patch}`).replace(line2, `reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n                ${getIBLRadiance_patch}`);\n}\n\nconst finalFragmentShader = finalSSRShader.replace(\"#include <helperFunctions>\", helperFunctions).replace(\"#include <boxBlur>\", boxBlur); // all the properties for which we don't have to resample\n\nconst noResetSamplesProperties = [\"blur\", \"blurSharpness\", \"blurKernel\"];\nconst defaultCubeRenderTarget = new WebGLCubeRenderTarget(1);\nlet pmremGenerator;\nclass SSREffect extends Effect {\n  /**\n   * @param {THREE.Scene} scene The scene of the SSR effect\n   * @param {THREE.Camera} camera The camera with which SSR is being rendered\n   * @param {SSROptions} [options] The optional options for the SSR effect\n   */\n  constructor(scene, camera, options = defaultSSROptions) {\n    super(\"SSREffect\", finalFragmentShader, {\n      type: \"FinalSSRMaterial\",\n      uniforms: new Map([[\"reflectionsTexture\", new Uniform(null)], [\"blur\", new Uniform(0)], [\"blurSharpness\", new Uniform(0)], [\"blurKernel\", new Uniform(0)]]),\n      defines: new Map([[\"RENDER_MODE\", \"0\"]])\n    });\n    this.haltonSequence = generateHalton23Points(1024);\n    this.haltonIndex = 0;\n    this.selection = new Selection();\n    this.lastSize = void 0;\n    this.cubeCamera = new CubeCamera(0.001, 1000, defaultCubeRenderTarget);\n    this.usingBoxProjectedEnvMap = false;\n    this._scene = scene;\n    this._camera = camera;\n    const trOptions = {\n      boxBlur: true,\n      dilation: true\n    };\n    options = _extends({}, defaultSSROptions, options, trOptions); // set up passes\n    // temporal resolve pass\n\n    this.temporalResolvePass = new TemporalResolvePass(scene, camera, trCompose, options);\n    this.uniforms.get(\"reflectionsTexture\").value = this.temporalResolvePass.renderTarget.texture; // reflections pass\n\n    this.reflectionsPass = new ReflectionsPass(this, options);\n    this.temporalResolvePass.fullscreenMaterial.uniforms.inputTexture.value = this.reflectionsPass.renderTarget.texture;\n    this.lastSize = {\n      width: options.width,\n      height: options.height,\n      resolutionScale: options.resolutionScale,\n      velocityResolutionScale: options.velocityResolutionScale\n    };\n    this.setSize(options.width, options.height);\n    this.makeOptionsReactive(options);\n  }\n\n  makeOptionsReactive(options) {\n    let needsUpdate = false;\n    const reflectionPassFullscreenMaterialUniforms = this.reflectionsPass.fullscreenMaterial.uniforms;\n    const reflectionPassFullscreenMaterialUniformsKeys = Object.keys(reflectionPassFullscreenMaterialUniforms);\n\n    for (const key of Object.keys(options)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return options[key];\n        },\n\n        set(value) {\n          if (options[key] === value && needsUpdate) return;\n          options[key] = value;\n\n          if (!noResetSamplesProperties.includes(key)) {\n            this.setSize(this.lastSize.width, this.lastSize.height, true);\n          }\n\n          switch (key) {\n            case \"resolutionScale\":\n              this.setSize(this.lastSize.width, this.lastSize.height);\n              break;\n\n            case \"velocityResolutionScale\":\n              this.temporalResolvePass.velocityResolutionScale = value;\n              this.setSize(this.lastSize.width, this.lastSize.height, true);\n              break;\n\n            case \"blur\":\n              this.uniforms.get(\"blur\").value = value;\n              break;\n\n            case \"blurSharpness\":\n              this.uniforms.get(\"blurSharpness\").value = value;\n              break;\n\n            case \"blurKernel\":\n              this.uniforms.get(\"blurKernel\").value = value;\n              break;\n            // defines\n\n            case \"steps\":\n              this.reflectionsPass.fullscreenMaterial.defines.steps = parseInt(value);\n              this.reflectionsPass.fullscreenMaterial.needsUpdate = needsUpdate;\n              break;\n\n            case \"refineSteps\":\n              this.reflectionsPass.fullscreenMaterial.defines.refineSteps = parseInt(value);\n              this.reflectionsPass.fullscreenMaterial.needsUpdate = needsUpdate;\n              break;\n\n            case \"missedRays\":\n              if (value) {\n                this.reflectionsPass.fullscreenMaterial.defines.missedRays = \"\";\n              } else {\n                delete this.reflectionsPass.fullscreenMaterial.defines.missedRays;\n              }\n\n              this.reflectionsPass.fullscreenMaterial.needsUpdate = needsUpdate;\n              break;\n\n            case \"correctionRadius\":\n              this.temporalResolvePass.fullscreenMaterial.defines.correctionRadius = Math.round(value);\n              this.temporalResolvePass.fullscreenMaterial.needsUpdate = needsUpdate;\n              break;\n\n            case \"blend\":\n              this.temporalResolvePass.fullscreenMaterial.uniforms.blend.value = value;\n              break;\n\n            case \"correction\":\n              this.temporalResolvePass.fullscreenMaterial.uniforms.correction.value = value;\n              break;\n\n            case \"exponent\":\n              this.temporalResolvePass.fullscreenMaterial.uniforms.exponent.value = value;\n              break;\n\n            case \"distance\":\n              reflectionPassFullscreenMaterialUniforms.rayDistance.value = value;\n            // must be a uniform\n\n            default:\n              if (reflectionPassFullscreenMaterialUniformsKeys.includes(key)) {\n                reflectionPassFullscreenMaterialUniforms[key].value = value;\n              }\n\n          }\n        }\n\n      }); // apply all uniforms and defines\n\n      this[key] = options[key];\n    }\n\n    needsUpdate = true;\n  }\n\n  setSize(width, height, force = false) {\n    if (!force && width === this.lastSize.width && height === this.lastSize.height && this.resolutionScale === this.lastSize.resolutionScale && this.velocityResolutionScale === this.lastSize.velocityResolutionScale) return;\n    this.temporalResolvePass.setSize(width, height);\n    this.reflectionsPass.setSize(width, height);\n    this.lastSize = {\n      width,\n      height,\n      resolutionScale: this.resolutionScale,\n      velocityResolutionScale: this.velocityResolutionScale\n    };\n  }\n\n  generateBoxProjectedEnvMapFallback(renderer, position = new Vector3(), size = new Vector3(), envMapSize = 512) {\n    this.cubeCamera.renderTarget.dispose();\n    this.cubeCamera.renderTarget = new WebGLCubeRenderTarget(envMapSize);\n    this.cubeCamera.position.copy(position);\n    this.cubeCamera.updateMatrixWorld();\n    this.cubeCamera.update(renderer, this._scene);\n\n    if (!pmremGenerator) {\n      pmremGenerator = new PMREMGenerator(renderer);\n      pmremGenerator.compileCubemapShader();\n    }\n\n    const envMap = pmremGenerator.fromCubemap(this.cubeCamera.renderTarget.texture).texture;\n    envMap.minFilter = LinearFilter;\n    envMap.magFilter = LinearFilter;\n    const reflectionsMaterial = this.reflectionsPass.fullscreenMaterial;\n    useBoxProjectedEnvMap(reflectionsMaterial, position, size);\n    reflectionsMaterial.fragmentShader = reflectionsMaterial.fragmentShader.replace(\"vec3 worldPos\", \"worldPos\").replace(\"varying vec3 vWorldPosition;\", \"vec3 worldPos;\");\n    reflectionsMaterial.uniforms.envMapPosition.value.copy(position);\n    reflectionsMaterial.uniforms.envMapSize.value.copy(size);\n    setupEnvMap(reflectionsMaterial, envMap, envMapSize);\n    this.usingBoxProjectedEnvMap = true;\n    return envMap;\n  }\n\n  setIBLRadiance(iblRadiance, renderer) {\n    this._scene.traverse(c => {\n      if (c.material) {\n        var _renderer$properties$;\n\n        const uniforms = (_renderer$properties$ = renderer.properties.get(c.material)) == null ? void 0 : _renderer$properties$.uniforms;\n\n        if (uniforms && \"disableIBLRadiance\" in uniforms) {\n          uniforms.disableIBLRadiance.value = iblRadiance;\n        }\n      }\n    });\n  }\n\n  deleteBoxProjectedEnvMapFallback() {\n    const reflectionsMaterial = this.reflectionsPass.fullscreenMaterial;\n    reflectionsMaterial.uniforms.envMap.value = null;\n    reflectionsMaterial.fragmentShader = reflectionsMaterial.fragmentShader.replace(\"worldPos = \", \"vec3 worldPos = \");\n    delete reflectionsMaterial.defines.BOX_PROJECTED_ENV_MAP;\n    reflectionsMaterial.needsUpdate = true;\n    this.usingBoxProjectedEnvMap = false;\n  }\n\n  dispose() {\n    super.dispose();\n    this.reflectionsPass.dispose();\n    this.temporalResolvePass.dispose();\n  }\n\n  update(renderer, inputBuffer) {\n    if (!this.usingBoxProjectedEnvMap && this._scene.environment) {\n      const reflectionsMaterial = this.reflectionsPass.fullscreenMaterial;\n      let envMap = null; // not sure if there is a cleaner way to find the internal texture of a CubeTexture (when used as scene environment)\n\n      this._scene.traverse(c => {\n        if (!envMap && c.material && !c.material.envMap) {\n          const properties = renderer.properties.get(c.material);\n          if (\"envMap\" in properties && properties.envMap instanceof Texture) envMap = properties.envMap;\n        }\n      });\n\n      if (envMap) {\n        const envMapCubeUVHeight = this._scene.environment.image.height;\n        setupEnvMap(reflectionsMaterial, envMap, envMapCubeUVHeight);\n      }\n    }\n\n    this.haltonIndex = (this.haltonIndex + 1) % this.haltonSequence.length;\n    const [x, y] = this.haltonSequence[this.haltonIndex];\n    const {\n      width,\n      height\n    } = this.lastSize;\n    this.temporalResolvePass.velocityPass.render(renderer); // jittering the view offset each frame reduces aliasing for the reflection\n\n    if (this._camera.setViewOffset) this._camera.setViewOffset(width, height, x, y, width, height); // render reflections of current frame\n\n    this.reflectionsPass.render(renderer, inputBuffer); // compose reflection of last and current frame into one reflection\n\n    this.temporalResolvePass.render(renderer);\n\n    this._camera.clearViewOffset();\n  }\n\n  static patchDirectEnvIntensity(envMapIntensity = 0) {\n    if (envMapIntensity === 0) {\n      ShaderChunk.envmap_physical_pars_fragment = ShaderChunk.envmap_physical_pars_fragment.replace(\"vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\", \"vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) { return vec3(0.0);\");\n    } else {\n      ShaderChunk.envmap_physical_pars_fragment = ShaderChunk.envmap_physical_pars_fragment.replace(\"vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\", \"vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness ) * \" + envMapIntensity.toFixed(5) + \";\");\n    }\n  }\n\n}\n\nexport { SSREffect, defaultSSROptions };\n"],
  "mappings": "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",
  "names": ["React", "ReactDebugCurrentFrame", "i", "jsx", "jsxs", "i", "isWebGL2Available", "fragmentShader", "halton", "EffectComposer", "React", "downSamplingPass", "normalPass", "DepthOfField", "effect", "scene", "pointer", "Effect", "ChromaticAberration", "ColorAverage", "Glitch", "GodRays", "Grid", "Selection", "Outline", "forwardRef", "Pixelation", "SelectiveBloom", "SSAO", "Texture", "LUT", "TiltShiftEffect", "SSR"]
}
